{ pkgs, ... }:
let
  floorp-nightly = pkgs.callPackage (
    {
      stdenv,
      lib,
      fetchFromGitHub,
      buildMozillaMach,
      nixosTests,
      python311,
    }:
    (
      (buildMozillaMach rec {
        pname = "floorp";
        packageVersion = "11.17.4";
        applicationName = "Floorp";
        binaryName = "floorp";
        branding = "browser/branding/official";
        allowAddonSideload = true;
        requireSigning = false;

        # Must match the contents of `browser/config/version.txt` in the source tree
        version = "128.1.0";
        src = fetchFromGitHub {
          owner = "Floorp-Projects";
          repo = "Floorp";
          fetchSubmodules = true;
          rev = "v${packageVersion}";
          hash = "sha256-k0XNfB4ZlIDyE1AjR2KhVZS3i0ad4yKUYPWXEZTZHcM=";
        };
        extraConfigureFlags = [
          "--with-app-name=${pname}"
          "--with-app-basename=${applicationName}"
          "--with-branding=browser/branding/official"
          "--with-distribution-id=app.floorp.Floorp"
          "--with-unsigned-addon-scopes=app,system"
          "--allow-addon-sideload"
        ];

        extraPostPatch = # bash
          ''
            # Fix .desktop files for PWAs generated by Floorp; they hardcode /usr/bin
            # https://github.com/NixOS/nixpkgs/issues/314115
            substituteInPlace floorp/browser/base/content/modules/ssb/LinuxSupport.mjs \
            --replace-fail 'Services.dirsvc.get("XREExeF",Ci.nsIFile).path' floorp
          '';

        meta = {
          description = "A fork of Firefox, focused on keeping the Open, Private and Sustainable Web alive, built in Japan";
          homepage = "https://floorp.app/";
          maintainers = with lib.maintainers; [ christoph-heiss ];
          platforms = lib.platforms.unix;
          badPlatforms = lib.platforms.darwin;
          broken = stdenv.buildPlatform.is32bit; # since Firefox 60, build on 32-bit platforms fails with "out of memory".
          # not in `badPlatforms` because cross-compilation on 64-bit machine might work.
          maxSilent = 14400; # 4h, double the default of 7200s (c.f. #129212, #129115)
          license = lib.licenses.mpl20;
        };
      }).override
      {
        privacySupport = true;
        webrtcSupport = true;
        enableOfficialBranding = false;
        googleAPISupport = true;
        mlsAPISupport = true;
        python3 = python311;
      }
    ).overrideAttrs
      (_: {
        # nativeBuildInputs =
        #   oa.nativeBuildInputs
        #   ++ (builtins.attrValues { inherit (python311Packages) distutils_extra distlib; });
        #LD_LIBRARY_PATH = "/run/opengl-driver/lib";
        MOZ_REQUIRE_SIGNING = "";
        MOZ_DATA_REPORTING = "";
        MOZ_TELEMETRY_REPORTING = "";
        doCheck = false;
      })
  ) { };
in
pkgs.wrapFirefox floorp-nightly { }
